version: "3.8"
services:
  strapi:
    container_name: strapi
    build: ./strapi_db
    image: mystrapi:latest
    restart: unless-stopped
    env_file: ./strapi_db/.env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi_db/config:/opt/app/config
      - ./strapi_db/src:/opt/app/src
      - ./strapi_db/package.json:/opt/app/package.json
      - ./strapi_db/yarn.lock:/opt/yarn.lock
      - ./strapi_db/.env:/opt/app/.env
      - ./strapi_db/.tmp:/opt/app/.tmp
    ports:
      - "1337:1337"
    networks:
      - strapi_network
    depends_on:
      - strapiDB

  fastapi:
    container_name: fastapi
    build: .
    ports:
      - "8000:80"
    volumes:
      - .:/code
    networks:
      - strapi_network
    depends_on:
      - strapiDB

  strapiDB:
    image: postgres:12.0-alpine
    container_name: strapiDB
    platform: linux/amd64
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - strapi_network

volumes:
  strapi-data:

networks:
  strapi_network:
    name: strapi_network
    driver: bridge